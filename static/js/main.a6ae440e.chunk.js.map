{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/Loader/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PeopleTable","people","slug","useParams","map","person","isSelected","classNames","to","sex","name","born","died","find","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setLoading","getAllPeople","peopleFromServer","useEffect","length","HomePage","NotFoundPage","Navigation","role","isActive","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a6ae440e.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../../types';\n\ntype PeopleTableProps = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<PeopleTableProps> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map((person) => {\n            const isSelected = slug === person.slug;\n            const findMother = (): Person | undefined => {\n              return people.find((mother) => mother.name === person.motherName);\n            };\n\n            const findFather = (): Person | undefined => {\n              return people.find((father) => father.name === person.fatherName);\n            };\n\n            return (\n              <tr\n                data-cy=\"person\"\n                key={person.slug}\n                className={classNames({ 'has-background-warning': isSelected })}\n              >\n                <td>\n                  <Link\n                    to={`/people/${person.slug}`}\n                    // eslint-disable-next-line\n                    className={classNames({ 'has-text-danger': person.sex === 'f' })}\n                  >\n                    {person.name}\n                  </Link>\n                </td>\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                <td>{findMother() ? person.motherName : '-'}</td>\n                <td>{findFather() ? person.fatherName : '-'}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/Loader/PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const getAllPeople = async () => {\n    setLoading(true);\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch (error) {\n      setIsError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getAllPeople();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {!isLoading && !isError && people.length === 0 && (\n          <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n        )}\n\n        {!isLoading && !isError && people.length > 0 && (\n          <PeopleTable people={people} />\n        )}\n\n      </div>\n    </div>\n\n  );\n};\n","export const HomePage = () => {\n  return (\n    <div>\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <div>\n      <p>Page not found</p>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item',\n            { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item',\n            { 'has-background-grey-lighter': isActive },\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport { Routes, Route } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navigation } from './components/Loader/Navigation/Navigation';\n\nexport const App = () => (\n\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"people\" element={<PeoplePage />} />\n          <Route path=\"/people/:slug\" element={<PeoplePage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}